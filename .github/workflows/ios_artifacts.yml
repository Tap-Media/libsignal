name: Build iOS Artifacts
on: push
env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build

    permissions:
      # Needed for ncipollo/release-action.
      contents: 'write'
      # Needed for google-github-actions/auth.
      id-token: 'write'

    runs-on: macos-latest

    timeout-minutes: 45

    steps:
    - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      with:
        submodules: recursive


    - id: archive-name
      run: echo name=libsignal-client-ios-build-v$(sed -En "s/${VERSION_REGEX}/\1/p" LibSignalClient.podspec).tar.gz >> $GITHUB_OUTPUT
      env:
        VERSION_REGEX: "^.*[.]version += '(.+)'$"

    - run: rustup toolchain install $(cat rust-toolchain) --profile minimal --target x86_64-apple-ios,aarch64-apple-ios,aarch64-apple-ios-sim --component rust-src

    - run: brew install protobuf

    - name: Build for x86_64-apple-ios
      run: swift/build_ffi.sh --release
      env:
        CARGO_BUILD_TARGET: x86_64-apple-ios

    - name: Build for aarch64-apple-ios
      run: swift/build_ffi.sh --release
      env:
        CARGO_BUILD_TARGET: aarch64-apple-ios

    - name: Build for aarch64-apple-ios-sim
      run: swift/build_ffi.sh --release
      env:
        CARGO_BUILD_TARGET: aarch64-apple-ios-sim

    - run: tar -c --auto-compress --no-mac-metadata -f '${{ steps.archive-name.outputs.name }}' target/*/release/libsignal_ffi.a

    - run: "shasum -a 256 '${{ steps.archive-name.outputs.name }}' | tee -a $GITHUB_STEP_SUMMARY '${{ steps.archive-name.outputs.name }}.sha256'"
      shell: bash # Explicitly setting the shell turns on pipefail in GitHub Actions

    - name: Attach artifact to the run
      uses: actions/upload-artifact@5d5d22a31266ced268874388b861e4b58bb5c2f3 # v4.3.1
      with:
        path: ${{ steps.archive-name.outputs.name }}
        name: libsignal-client-ios
  
    - name: Configure AWS credentials via OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::767828741221:role/GitHubOIDCRole
        aws-region: ap-southeast-1

    - name: Upload to S3 via AWS CLI
      run: |
        echo "Uploading ${{ steps.archive-name.outputs.name }} to S3..."
        aws s3 cp "${{ steps.archive-name.outputs.name }}" s3://lib-yoush-artifacts


